<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Code Ronin</title>
  <icon>https://modernronin.github.io/icon.png</icon>
  <subtitle>Random thoughts about software development</subtitle>
  <link href="https://modernronin.github.io/atom.xml" rel="self"/>
  
  <link href="https://modernronin.github.io/"/>
  <updated>2021-01-08T10:21:10.602Z</updated>
  <id>https://modernronin.github.io/</id>
  
  <author>
    <name>Modern Ronin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>renameproject v2.1.2</title>
    <link href="https://modernronin.github.io/2021/01/08/renameproject-v2-1-2/"/>
    <id>https://modernronin.github.io/2021/01/08/renameproject-v2-1-2/</id>
    <published>2021-01-08T08:53:35.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;There’s another update out for &lt;code&gt;renameproject&lt;/code&gt;, just a bugfix release. See &lt;a</summary>
        
      
    
    
    
    
    <category term="Visual Studio" scheme="https://modernronin.github.io/tags/Visual-Studio/"/>
    
    <category term="renameproject" scheme="https://modernronin.github.io/tags/renameproject/"/>
    
    <category term="commandline tools" scheme="https://modernronin.github.io/tags/commandline-tools/"/>
    
  </entry>
  
  <entry>
    <title>NSubstitute and equivalency argument matching</title>
    <link href="https://modernronin.github.io/2021/01/06/NSubstitute-and-equivalency-argument-matching/"/>
    <id>https://modernronin.github.io/2021/01/06/NSubstitute-and-equivalency-argument-matching/</id>
    <published>2021-01-06T12:15:06.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;When using the otherwise superb &lt;a href=&quot;https://nsubstitute.github.io/&quot;&gt;NSubstitute&lt;/a&gt;, there is one thing that bothers me regularly:</summary>
        
      
    
    
    
    
    <category term="nsubstitute" scheme="https://modernronin.github.io/tags/nsubstitute/"/>
    
    <category term="nsubstitute.equivalency" scheme="https://modernronin.github.io/tags/nsubstitute-equivalency/"/>
    
    <category term="fluentassertions" scheme="https://modernronin.github.io/tags/fluentassertions/"/>
    
  </entry>
  
  <entry>
    <title>Prevent re-entrancy on long running async methods</title>
    <link href="https://modernronin.github.io/2020/12/17/Prevent-re-entrancy-on-long-running-async-methods/"/>
    <id>https://modernronin.github.io/2020/12/17/Prevent-re-entrancy-on-long-running-async-methods/</id>
    <published>2020-12-17T19:57:20.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Sometimes you got async methods you know will run for some time and you want to prevent them from being called while a previous call has</summary>
        
      
    
    
    
    
    <category term="async" scheme="https://modernronin.github.io/tags/async/"/>
    
    <category term="re-entrancy" scheme="https://modernronin.github.io/tags/re-entrancy/"/>
    
    <category term="long-running" scheme="https://modernronin.github.io/tags/long-running/"/>
    
    <category term="tdd" scheme="https://modernronin.github.io/tags/tdd/"/>
    
  </entry>
  
  <entry>
    <title>Integrating dependency injection into a legacy code base</title>
    <link href="https://modernronin.github.io/2020/12/13/Integrating-depencency-injection-into-a-legacy-code-base/"/>
    <id>https://modernronin.github.io/2020/12/13/Integrating-depencency-injection-into-a-legacy-code-base/</id>
    <published>2020-12-13T18:55:11.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Nobody likes it, but most of us eventually encounter a legacy code-base without tests and without IOC where everything revolves around</summary>
        
      
    
    
    
    
    <category term="ReSharper" scheme="https://modernronin.github.io/tags/ReSharper/"/>
    
    <category term="refactoring" scheme="https://modernronin.github.io/tags/refactoring/"/>
    
    <category term="software design" scheme="https://modernronin.github.io/tags/software-design/"/>
    
    <category term="legacy code" scheme="https://modernronin.github.io/tags/legacy-code/"/>
    
    <category term="long" scheme="https://modernronin.github.io/tags/long/"/>
    
    <category term="Autofac" scheme="https://modernronin.github.io/tags/Autofac/"/>
    
  </entry>
  
  <entry>
    <title>renameproject v2.1.1</title>
    <link href="https://modernronin.github.io/2020/12/13/renameproject-v2-1-1/"/>
    <id>https://modernronin.github.io/2020/12/13/renameproject-v2-1-1/</id>
    <published>2020-12-13T14:15:15.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;There’s an update out for &lt;code&gt;renameproject&lt;/code&gt;, just a bugfix release. See &lt;a</summary>
        
      
    
    
    
    
    <category term="Visual Studio" scheme="https://modernronin.github.io/tags/Visual-Studio/"/>
    
    <category term="renameproject" scheme="https://modernronin.github.io/tags/renameproject/"/>
    
    <category term="commandline tools" scheme="https://modernronin.github.io/tags/commandline-tools/"/>
    
  </entry>
  
  <entry>
    <title>renameproject v2.1 - Move Support</title>
    <link href="https://modernronin.github.io/2020/12/03/renameproject-v2-1/"/>
    <id>https://modernronin.github.io/2020/12/03/renameproject-v2-1/</id>
    <published>2020-12-03T22:35:23.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;code&gt;renameproject&lt;/code&gt; now also supports moving projects to different directories. See &lt;a</summary>
        
      
    
    
    
    
    <category term="Visual Studio" scheme="https://modernronin.github.io/tags/Visual-Studio/"/>
    
    <category term="renameproject" scheme="https://modernronin.github.io/tags/renameproject/"/>
    
    <category term="commandline tools" scheme="https://modernronin.github.io/tags/commandline-tools/"/>
    
  </entry>
  
  <entry>
    <title>Extract a parameter object with R#</title>
    <link href="https://modernronin.github.io/2020/11/24/Extract-a-parameter-object-with-R/"/>
    <id>https://modernronin.github.io/2020/11/24/Extract-a-parameter-object-with-R/</id>
    <published>2020-11-24T21:27:00.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;At some point in the many years since I’ve been using R#, they have sneaked in a very useful feature, but hidden it so well that it took</summary>
        
      
    
    
    
    
    <category term="ReSharper" scheme="https://modernronin.github.io/tags/ReSharper/"/>
    
    <category term="refactoring" scheme="https://modernronin.github.io/tags/refactoring/"/>
    
  </entry>
  
  <entry>
    <title>Duplicate a code window in VS</title>
    <link href="https://modernronin.github.io/2020/11/16/Duplicate-a-code-window-in-VS/"/>
    <id>https://modernronin.github.io/2020/11/16/Duplicate-a-code-window-in-VS/</id>
    <published>2020-11-16T21:23:06.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;If anyone wondered, like me, how in Visual Studio you can get a horizontal equivalent for &lt;code&gt;Window | Split&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;While the</summary>
        
      
    
    
    
    
    <category term="Visual Studio" scheme="https://modernronin.github.io/tags/Visual-Studio/"/>
    
  </entry>
  
  <entry>
    <title>PlantUml</title>
    <link href="https://modernronin.github.io/2020/11/05/PlantUml/"/>
    <id>https://modernronin.github.io/2020/11/05/PlantUml/</id>
    <published>2020-11-05T22:18:03.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Lately, I’ve started to use &lt;a href=&quot;https://plantuml.com/&quot;&gt;PlantUML&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;If you are like me and prefer keyboard over mouse and</summary>
        
      
    
    
    
    
    <category term="uml" scheme="https://modernronin.github.io/tags/uml/"/>
    
    <category term="diagramming" scheme="https://modernronin.github.io/tags/diagramming/"/>
    
  </entry>
  
  <entry>
    <title>About System.Threading.Channels</title>
    <link href="https://modernronin.github.io/2020/10/30/About-System-Threading-Channels/"/>
    <id>https://modernronin.github.io/2020/10/30/About-System-Threading-Channels/</id>
    <published>2020-10-30T21:09:01.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I just stumbled across an article about a new addition to the BCL, the &lt;code&gt;System.Threading.Channels&lt;/code&gt; namespace. &lt;/p&gt;
&lt;p&gt;The new</summary>
        
      
    
    
    
    
    <category term="BCL" scheme="https://modernronin.github.io/tags/BCL/"/>
    
    <category term="Threading" scheme="https://modernronin.github.io/tags/Threading/"/>
    
    <category term="interesting articles" scheme="https://modernronin.github.io/tags/interesting-articles/"/>
    
  </entry>
  
  <entry>
    <title>renameproject v2.0</title>
    <link href="https://modernronin.github.io/2020/10/20/renameproject-v2-0/"/>
    <id>https://modernronin.github.io/2020/10/20/renameproject-v2-0/</id>
    <published>2020-10-20T23:02:01.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;There’s an update out for &lt;code&gt;renameproject&lt;/code&gt;. This is a bit of a bigger change in how you control its behavior. See &lt;a</summary>
        
      
    
    
    
    
    <category term="Visual Studio" scheme="https://modernronin.github.io/tags/Visual-Studio/"/>
    
    <category term="renameproject" scheme="https://modernronin.github.io/tags/renameproject/"/>
    
    <category term="commandline tools" scheme="https://modernronin.github.io/tags/commandline-tools/"/>
    
  </entry>
  
  <entry>
    <title>Testing with Flurl</title>
    <link href="https://modernronin.github.io/2020/10/13/Testing-with-Flurl/"/>
    <id>https://modernronin.github.io/2020/10/13/Testing-with-Flurl/</id>
    <published>2020-10-13T23:09:04.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;When developing against REST APIs without dedicated client libraries, I very much like to use &lt;a</summary>
        
      
    
    
    
    
    <category term="TDD" scheme="https://modernronin.github.io/tags/TDD/"/>
    
    <category term="REST APIs" scheme="https://modernronin.github.io/tags/REST-APIs/"/>
    
    <category term="Flurl" scheme="https://modernronin.github.io/tags/Flurl/"/>
    
  </entry>
  
  <entry>
    <title>FluentAssertions: How to assert collection&#39;s elements with equivalence AND order</title>
    <link href="https://modernronin.github.io/2020/10/12/FluentAssertions-How-to-assert-collection-s-elements-with-equivalence-AND-order/"/>
    <id>https://modernronin.github.io/2020/10/12/FluentAssertions-How-to-assert-collection-s-elements-with-equivalence-AND-order/</id>
    <published>2020-10-12T22:30:08.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I’ve been using the marvellous &lt;a href=&quot;https://fluentassertions.com/&quot;&gt;FluentAssertions&lt;/a&gt; library for many years, yet I still discover</summary>
        
      
    
    
    
    
    <category term="FluentAssertions" scheme="https://modernronin.github.io/tags/FluentAssertions/"/>
    
    <category term="TDD" scheme="https://modernronin.github.io/tags/TDD/"/>
    
  </entry>
  
  <entry>
    <title>Quick Circular Buffer</title>
    <link href="https://modernronin.github.io/2020/10/08/Quick-Circular-Enumerator/"/>
    <id>https://modernronin.github.io/2020/10/08/Quick-Circular-Enumerator/</id>
    <published>2020-10-08T22:20:08.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Recently, I found myself for the first time in my 25+ year career needing infinite iteration over a finite set of elements. &lt;/p&gt;
&lt;p&gt;The</summary>
        
      
    
    
    
    
    <category term="data structures" scheme="https://modernronin.github.io/tags/data-structures/"/>
    
  </entry>
  
  <entry>
    <title>HttpStatusCode in netstandard 2.0</title>
    <link href="https://modernronin.github.io/2020/09/28/HttpStatusCode-in-netstandard-2-0/"/>
    <id>https://modernronin.github.io/2020/09/28/HttpStatusCode-in-netstandard-2-0/</id>
    <published>2020-09-28T22:04:01.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Today I stumbled across a strange omission in netstandard2.0: the &lt;code&gt;HttpStatusCode&lt;/code&gt; enum is incomplete (as opposed to, say,</summary>
        
      
    
    
    
    
    <category term="BCL" scheme="https://modernronin.github.io/tags/BCL/"/>
    
    <category term="netstandard2.0" scheme="https://modernronin.github.io/tags/netstandard2-0/"/>
    
    <category term="gotchas" scheme="https://modernronin.github.io/tags/gotchas/"/>
    
    <category term="C# language" scheme="https://modernronin.github.io/tags/C-language/"/>
    
    <category term="F# language" scheme="https://modernronin.github.io/tags/F-language/"/>
    
    <category term="language design" scheme="https://modernronin.github.io/tags/language-design/"/>
    
  </entry>
  
  <entry>
    <title>Exclude code regions from ReSharpers&#39; format</title>
    <link href="https://modernronin.github.io/2020/09/17/Exclude-code-regions-from-ReSharpers-format/"/>
    <id>https://modernronin.github.io/2020/09/17/Exclude-code-regions-from-ReSharpers-format/</id>
    <published>2020-09-17T22:55:34.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;A dev-friend was unhappy about not being able to exclude certain code passages from R#’s cleanup/formatting feature.&lt;/p&gt;
&lt;p&gt;Actually,</summary>
        
      
    
    
    
    
    <category term="ReSharper" scheme="https://modernronin.github.io/tags/ReSharper/"/>
    
    <category term="code format" scheme="https://modernronin.github.io/tags/code-format/"/>
    
  </entry>
  
  <entry>
    <title>renameproject v1.0.1</title>
    <link href="https://modernronin.github.io/2020/09/15/renameproject-v1-0-1/"/>
    <id>https://modernronin.github.io/2020/09/15/renameproject-v1-0-1/</id>
    <published>2020-09-15T22:27:09.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;There’s an update out for &lt;code&gt;renameproject&lt;/code&gt;, just a bugfix release. See &lt;a</summary>
        
      
    
    
    
    
    <category term="Visual Studio" scheme="https://modernronin.github.io/tags/Visual-Studio/"/>
    
    <category term="renameproject" scheme="https://modernronin.github.io/tags/renameproject/"/>
    
    <category term="commandline tools" scheme="https://modernronin.github.io/tags/commandline-tools/"/>
    
  </entry>
  
  <entry>
    <title>Good advise for younger devs</title>
    <link href="https://modernronin.github.io/2020/09/06/Good-advise-for-younger-devs/"/>
    <id>https://modernronin.github.io/2020/09/06/Good-advise-for-younger-devs/</id>
    <published>2020-09-06T22:19:49.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Another interesting article, this time something for younger folk (careerwise). With my 25+ years of experience, I can say that I agree</summary>
        
      
    
    
    
    
    <category term="interesting articles" scheme="https://modernronin.github.io/tags/interesting-articles/"/>
    
    <category term="craftsmanship" scheme="https://modernronin.github.io/tags/craftsmanship/"/>
    
  </entry>
  
  <entry>
    <title>Interesting article about Microservices</title>
    <link href="https://modernronin.github.io/2020/09/05/Interesting-article-about-Microservices/"/>
    <id>https://modernronin.github.io/2020/09/05/Interesting-article-about-Microservices/</id>
    <published>2020-09-05T22:12:43.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;I stumbled across an interesting article about design in the context of microservices. The great thing about this piece is that they are</summary>
        
      
    
    
    
    
    <category term="interesting articles" scheme="https://modernronin.github.io/tags/interesting-articles/"/>
    
    <category term="microservices" scheme="https://modernronin.github.io/tags/microservices/"/>
    
    <category term="architecture" scheme="https://modernronin.github.io/tags/architecture/"/>
    
    <category term="software design" scheme="https://modernronin.github.io/tags/software-design/"/>
    
  </entry>
  
  <entry>
    <title>Project Renamer</title>
    <link href="https://modernronin.github.io/2020/09/04/Project-Renamer/"/>
    <id>https://modernronin.github.io/2020/09/04/Project-Renamer/</id>
    <published>2020-09-04T22:04:13.000Z</published>
    <updated>2021-01-08T10:21:10.602Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Okay, this is going to be a bit of a plug, but…&lt;/p&gt;
&lt;p&gt;Over the years, it has always annoyed me that Visual Studio doesn’t properly</summary>
        
      
    
    
    
    
    <category term="Visual Studio" scheme="https://modernronin.github.io/tags/Visual-Studio/"/>
    
    <category term="renameproject" scheme="https://modernronin.github.io/tags/renameproject/"/>
    
    <category term="commandline tools" scheme="https://modernronin.github.io/tags/commandline-tools/"/>
    
  </entry>
  
</feed>
